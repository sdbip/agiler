# Features
+ Tasks (simple todos, engineering tasks, decisions to be made, seeking external help...)
+ Stories (business value, show progress to a stakeholder)
+ Features (business goals, marketable/testable/usable/lovable)
- Objectives and goals?
- Higher purpose of the product? Vision?
- Unformed ideas/Ice box

- Allow changing item title
- Add a description/subtitle?
- Let tasks depend on other tasks
- Assign developers to tasks (we don't have developers yet)
  - And be listed in the UI in that order
  - It should be possible to drag/drop to change the order
- Use socket.io to remove finished tasks automatically

# Stories
- Items should have a prioritisation order
- Select the current feature
  - Make the current feature the focus to adding stories and tasks

# Tasks
* Merge Read and WriteModel into a single Backend class
- Rename the `ItemCache`?

# Ice Box
- Should a Story work like an Epic?
  - A Task becomes a Story if it has children
  - It is good to have flexibility. Maybe even to reverse the operation.
  - Note: OmniFocus 1 worked like that. They chose to abandon the idea.
  - If there is a semantic difference between tasks and stories, it
    should probably be a bit awkward to convert berween them.
    - A Task should be ready to such a degree that you can just perform it without questions. A story is perhaps a bit more open?
- Features/MMFs/Epics are not the same as Stories/Tasks.
