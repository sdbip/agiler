# Features
+ Tasks (simple todos, engineering tasks, decisions to be made, seeking external help...)
* Stories (business value, show progress to a stakeholder)
- Features (business goals, marketable/testable/usable/lovable)
- Objectives and goals?
- Higher purpose of the product?

- Let tasks depend on other tasks
- Assign developers to tasks (we don't have developers yet)
- Prioritise features and stories
- Describe the purpose of a task (simple TODO item, done by an individual or a pair/mob)
- Mark tasks as started

# Stories
* Promote Task to Story
- Prioritise stories
- Add Task to Story
- Add tasks to a story
- Finish task automatically when last task is done
- Add story details
- Allow story title to be changed
- Add text describing the purpose of a story
- Add text describing the purpose of a task
- Implement UI changes
- Upgrade Story to Feature
- Split Feature
- Collect stories similarly to how tasks are collected now
  (But stories cannot be completed by clicking/checking, instead that displays the details)

# Tasks
- Add endpoint
- Update UI to display stories *and* tasks
- Plan UI changes
  - Maybe add stories directly (tasks that are immediately promoted)?

# Ice Box
- move frontend.ts to a different folder.
  The other code runs in the browser
- Publish to Heroku. Or somewhere else?
- Matcher/Specification pattern
- Use CQRS/ES?
- Design a reporter for Web Test Runner?
